[package]
name = "whenever"
description = "Lightweight task scheduler and automation tool"
readme = "README.md"
license = "LGPL-2.1-or-later"
version = "0.4.12"
authors = ["Francesco Garosi <francesco.garosi@gmail.com>"]
repository = "https://github.com/almostearthling/whenever/"
edition = "2024"

# a brief explanation of the available features:
#
# 1. "dbus": enables DBus support, available on both Linux and Windows, but
#    almost useless on Windows
# 2. "wmi": enable WMI support, only available on Windows (ignored on Linux)
# 3. "lua_unsafe": compiles the unsafe Lua interpreter, which is able to load
#    Lua C (binary) modules, is supported on both Linux and Windows, but it
#    is still experimental
#
# the suggested configurations are:
#
# - cargo build --release --no-default-features --features dbus     (Linux)
# - cargo build --release --no-default-features --features wmi      (Windows)
#
# as the default features are both enabled for rust-analyzer to consider them
[features]
default = ["dbus", "wmi"]
dbus = []
wmi = []
lua_unsafe = []

[dependencies]
time = "0.3.17"
chrono = "0.4.24"
rand = "0.9.2"
regex = "1.7.1"
log = "0.4.17"
flexi_logger = "0.31.2"
nu-ansi-term = "0.50.1"
clokwerk = "0.4.0"
listenfd = "1.0.1"
toml = "0.9.2"
serde = "1.0"
lazy_static = "1.4.0"
subprocess = "0.2.9"
ctrlc = { version = "3.2.5", features = ["termination"] }
cfgmap = { version = "0.4.0", features = ["from_toml", "from_json"] }
clap = { version = "4.1.4", features = ["derive"] }
mlua = { version = "0.11.1", features = ["lua54", "vendored"] }
unique_id = "0.1.5"
serde_json = "1.0.95"
single-instance = "0.3.3"
notify = "8.1.0"
async-std = "1.12.0"
zbus = "5.9.0"
wmi = "0.17.0"
whoami = "1.4.1"
itertools = "0.14.0"
futures = "0.3"

# user-idle can have a problem on wayland-based sessions: work around by using
# user-idle = { version = "0.6.0", default-features = false, features = ["dbus"] }
user-idle = "0.6.0"


# make the executable memory footprint as small as possible for release
[profile.release]
strip = true        # strip executable
opt-level = "z"     # optimize for size
lto = true
panic = 'abort'     # remove garbage strings from executable
